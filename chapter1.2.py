# # 1. Дан список a = [1, 2, 2, 4, 11, 2, 3, 1]. Напишите код, который выведет
# # список a без дубликатов.
# print("Задание №1 :")
# a = [1, 2, 2, 4, 11, 11, 3, 4, 4, 2, 5, 5, 3, 1]
# print('Исходный список: ', a)
# a = list(set(a))
# print(f'Новый список без дубликатов: {a}')
#
#
# # 2. Дан список a = [‘John’, ‘Anna’, ‘Raychel’, ‘Katarina’, ‘Marko’, ‘Tom’]
# # Удалите из списка 0, 4 и 5 элементы списка.
# print("Задание №2 :")
# a = ['John', 'Anna', 'Raychel', 'Katarina', 'Marko', 'Tom']
# del a[5]
# del a[4]
# del a[0]
# print("Список после удаления элементов: ", a)
#
# # 3. Дан список [1, 2, 3, 4, 5, 6, 7, 8, 9]. Отсортируйте его в обратном
# # порядке.
# print("Задание №3 :")
# list_ = [1, 2, 3, 4, 5, 6, 7, 8, 9]
# print("Исходный список: ", list_)
# list_.sort(reverse=True)
# print(f"Отсортированный список: {list_}")
#
#
# # 4. Измените один элемент списка с любым значением на новое.
# print("Задание №4 :")
# list_ = [1, 2, 3, 4, 5, 6, 7, 8, 9]
# new_item = int(input('Введите новое значение: '))
# list_[5] = new_item
# print(list_)
#
# # 5. Попросить пользователя ввести слова через пробел. Отсортировать
# # слова по количеству символов и вывести на экран результат.
# print("Задание №5 :")
# list_ = input("Введите слова через пробел: ")
# sorted_list = list_.split()
# sorted_list.sort(key=len)
# print(sorted_list)
#
#
# # 6. Напишите код для проверки существует ли ключ в dict.
# print("Задача №6 ")
# key_ = input('Введите ключ для проверки: ')
# new_dict = dict(zip(['Russia', 'Kyrgyzstan', 'USA'], ['Moscow', 'Bishkek', 'washington']))
# key = 0
# a = "Такога ключа нет в словаре"
# for key in new_dict.keys():
#     if key == key_:
#         a = 'Такой ключ есть в словаре'
#
# print(a)
#
# # 7. Напишите программу для объединения двух словарей в один.
# print("Задача №7 ")
# currency = {
#     'Kyrgyzstan': 'som',
#     'Russia': 'rubli',
#     'USA': 'dollar'
#     }
# currency2 = {
#     'UK': 'euro',
#     'China': 'yuan'
#     }
# currency.update(currency2)
# print(f'Объединенный словарь: {currency}')
#
#
# # 8. Напишите программу для сортировки dict по ключам.
# print("Задача №8 ")
# currency = {'Kyrgyzstan': 'som', 'Russia': 'rubli', 'USA': 'dollar', 'UK': 'euro', 'China': 'yuan'}
# currency2 = {}
# cur = sorted(currency.keys())
# for i in cur:
#     print(i, ':', currency.get(i))
#
# # 9. Напишите код, который проверяет пуст ли словарь.
# print("Задача №9 ")
# dictionary_ = {}
# if len(dictionary_) == 0:
#     print('Словарь пуст ')
# else:
#     print('Словарь не пуст ')
#
# # 10. Создайте список. Добавьте в него 3 новых элемента. Сделайте так,
# # чтобы этот список нельзя было больше изменить.
# print("Задача №9 ")
# dict_1 = {}
# dict_1[1] = 'один'
# dict_1[2] = 'два'
# dict_1[3] = 'три'
# print(dict_1)
# dict_typle1 = tuple(dict_1.items())
# print(dict_typle1)
#
# # 11. Создайте программу, которая спрашивает логин и пароль. Запишите
# # данные в dictionary и выведите результат.
# print("Задача №11")
# login = input(" Enter your login: ")
# password = input('Enter your password: ')
# if len(password) < 8:
#     print("Password too short!")
# else:
#     d = {login: password}
#     print(d)
#
#
# # 12. Напишите программу, чтобы проверить, является ли буква гласной
# # или согласной.
# # Пример:
# # Введите букву алфавита: к
# # Вывод: к согласная.
# print("Задача №12")
# rus_vowels = set('ауеыоэи')
# eng_vowels = set('eyuioa')
# letter = input("Enter one your letter: ")
# if letter in rus_vowels or letter in eng_vowels:
#     print(f" The letter '{letter}' is vowel")
# else:
#     print(f"The letter '{letter}' is consonant")
#
#
# # 13. Есть корзина наполненная n количеством яблок. Так же есть x
# # количество студентов. Разделите яблоки поровну между всеми
# # студентами. Если студентов больше чем яблок, то оставьте их в
# # корзине. Выведите в результат количество студентов, количество яблок
# # и остаток в корзине.
# print("Задача №13")
# apples = int(input('Введите количество яблок:'))
# students = int(input('Введите количество студентов'))
# print(f'{students} студентов получают по {apples//students} яблок')
# if apples % students == 0:
#     print("В корзине не осталось яблок")
# else:
#     print(f'В корзине осталось - {str(apples%students)} яблок')
#
#
# # 14. Для обустройства учебного кабинета необходимо приобрести парты.
# # Количество учеников вводит пользователь. Необходимо определить
# # сколько парт нужно купить, если ученики сидят по двое за одной партой.
# # Так же если учеников нечетное количество, то кто-то будет сидеть один
# # за партой.
# print("Задача №14")
# students = int(input("enter count of students: "))
# if students % 2 == 0:
#     print(students//2)
# else:
#     print(f'You need {students//2 +1} desktops')
#
#
# # 15. Напишите программу для расчета возраста собаки в человеческих
# # годах. Пользователь может ввести возраст и размер (маленькая,
# # средняя, крупная). Для вычисления умножте возраст собаки на 9
# # человеческих лет за каждый собачий для маленьких собак;
# # 10,5 лет для средних собак;
# # 12,5 лет для крупных собак;
# print("Задача №15")
# vozr = int(input("Введите возраст: "))
# razm = input("Введите размер (маленький, средний, крупный): ")
# if razm == 'маленький':
#     print(f'Собаке {vozr *9} лет')
# elif razm == 'средний':
#     print(f'Собаке {vozr * 10.5} лет')
# else:
#     print(f'Собаке {vozr *12.5} лет')
#
#
# # 16. Пользователь вводит три числа. Если все числа больше 10, то
# # вывести на экран yes, иначе no.
# # print('yes' if all(x>10 for x in nums) else 'no')
# print("Задача №16")
# list_ = []
# list_.append(int(input('Введите первое число: ')))
# list_.append(int(input('Введите второе число: ')))
# list_.append(int(input('Введите третье число:')))
# if all(x > 10 for x in list_):
#     print('Yes')
# else:
#     print('No')
#
#
# # 17. Дано три числа. Найти количество положительных чисел среди них.
# print("Задача №17")
# a = int(input("Первое число: "))
# b = int(input("Второе число: "))
# c = int(input("Третье число: "))
# print('Количество положительных чисел: ', (a > 0) + (b > 0) + (c > 0))
#
#
# # 18. Составить в интерпретаторе Python программу которая:
# # - просит пользователя ввести целое число и присваивает его
# # переменной num
# # - просит пользователя ввести множитель для возведения в степень и
# # присваивает его переменной step
# # - проверяет истинность условия, что введенное пользователем целое
# # число num меньше 100
# # - если это условие ИСТИННО, то необходимо возвести число num в
# # степень step (напоминаю, возведение в степень осуществляется
# # оператором **) и присвоить результат переменной rezult.
# # Результат вывести на печать
# # - если результат проверки ЛОЖЬ, то вывести на печать сообщение:
# # "Введенное вами число > 100".
# print("Задача №18")
# num = int(input("Введите целое число: "))
# step = int(input("Введите степень: "))
# if num < 100:
#     rezult = num ** step
#     print(f'Число в степени = {rezult}')
# else:
#     print("Введенное вами число > 100")
#
#
# # 19. Вводятся три целых числа. Определить какое из них наибольшее.
# # Пусть a, b, c - переменные, которым присваиваются введенные числа, а
# # переменная m в конечном итоге должна будет содержать значение
# # наибольшей переменной. Тогда алгоритм программы сведется к
# # следующему:
# # 1. Сначала предположим, что переменная a содержит наибольшее
# # значение. Присвоим его переменной m.
# # 2. Если текущее значение m меньше, чем у b, то следует присвоить m
# # значение b. Если это не так, то не изменять значение m.
# # 3. Если текущее значение m меньше, чем у c, то присвоить m
# # значение c. Иначе ничего не делать.
# print("Задача №19")
# a = int(input("Первое число: "))
# b = int(input("Второе число: "))
# c = int(input("Третье число: "))
# m = a
# if m < b:
#     m = b
# if m < c:
#     m = c
# print(f'Наибольшее число {m}')
#
#
# # 20. Вводятся три разных числа. Найти, какое из них является средним
# # (больше одного, но меньше другого).
# # Проверить, лежит ли первое число между двумя другими. При этом
# # может быть два случая:
# # первое больше второго и первое меньше третьего,
# # первое меньше второго и первое больше третьего.
# # Если ни один из вариантов не вернул истину, значит первое число не
# # среднее. Тогда проверяется, не лежит ли второе число между двумя
# # другими. Это может быть в двух случаях, когда
# # второе больше первого и меньше третьего,
# # второе меньше первого и больше третьего.
# # Если эти варианты также не вернули истину, то остается только один
# # вариант - посередине лежит третье число.
# print("Задача №20")
# a = int(input("Первое число: "))
# b = int(input("Второе число: "))
# c = int(input("Третье число: "))
# if a < c and a > b or a > c and a < b:
#     print(f"Среднее число {a}")
# elif b > a and b < c or b < a and b > c:
#     print(f"Среднее число {b}")
# else:
#     print(f"Среднее число {c}")